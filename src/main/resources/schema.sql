CREATE TABLE IF NOT EXISTS users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  login varchar(64) NOT NULL,
  username varchar(64),
  email varchar(128) NOT NULL,
  birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
  user_id integer,
  friend_user_id integer,
  status boolean DEFAULT false,
  CONSTRAINT fk_fr_user_id
  FOREIGN KEY(user_id)
      REFERENCES users(id),
      CONSTRAINT fk_fr_friend_user_id
      FOREIGN KEY(friend_user_id)
      REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS rating (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(32) NOT NULL,
  description varchar(256),
  CONSTRAINT uq_rating_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS films (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title varchar(128) NOT NULL,
  description varchar(1024),
  LENGTH integer NOT NULL,
  rating_id integer,
  releaseDate date NOT NULL,
  CONSTRAINT fk_f_rating_id
  FOREIGN KEY(rating_id) 
      REFERENCES rating(id)
);

CREATE TABLE IF NOT EXISTS genre (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(64) NOT NULL,
  description varchar(1024),
  CONSTRAINT uq_genre_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS film_genre (
  genre_id integer,
  film_id integer,
  CONSTRAINT fk_fc_genre_id
  FOREIGN KEY(genre_id) 
      REFERENCES genre(id),
      CONSTRAINT fk_fc_film_id
      FOREIGN KEY(film_id) 
      REFERENCES films(id)
);

CREATE TABLE IF NOT EXISTS favorite_films (
  user_id integer,
  film_id integer,
  CONSTRAINT fk_ff_user_id
  FOREIGN KEY(user_id) 
      REFERENCES users(id),
      CONSTRAINT fk_ff_film_id
      FOREIGN KEY(film_id) 
      REFERENCES films(id)
);
